on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*"

name: Project check
jobs:
  # эта job займется созданием кэша
  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: node:16
    steps:
      - uses: actions/checkout@v4
      # Кеширование npm
      - name: Cache dependencies
        # включаем специальный action
        uses: actions/cache@v3
        # передаем параметры
        with:
          # что кешировать (путь)
          path: ~/.npm
          # ключ кеширования (хеш)
          key: npm-${{ hashFiles('package-lock.json') }}
          # ключ для восстановления кеша
          restore-keys: npm-
      # Установка зависимостей проекта
      - name: Install dependencies
        run: npm ci --ignore-scripts
  # название job, на которое можно ссылаться из других мест,
  # например, когда нам нужно указать, что две jobs
  # работают последовательно:
  # jobs:
  #   build:
  #   eslint:
  #     needs: build
  lint:
    needs: build
    name: ESLint
    runs-on: ubuntu-latest
    container:
      image: node:16
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - run: npm ci

      - name: Run checks
        run: npm run lint

  prettier:
    needs: build
    name: Prettier
    runs-on: ubuntu-latest
    container:
      image: node:16
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Run checks
        run: |
          if [ -f 'package.json' ]; then npm run check:format; else echo 'Skip. The file package.json does not exist'; fi
